import org.gradle.api.java.archives.internal.DefaultManifest

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'org.ajoberstar.grgit' version '4.1.0'
}

group 'org.neo4j'
version '4.1-SNAPSHOT'

repositories {
    mavenCentral()
}

project.ext {
    arrowFlightGrpc = 'org.apache.arrow:flight-grpc:6.0.1'
    arrowCompression = 'org.apache.arrow:arrow-compression:6.0.1'
    neo4j = [
        driverVersion: '4.4.2',
        serverVersion: '4.4.3',
        gdsVersion: '1.8.2',
    ]
    jupiterVersion = '5.7.0'
    sl4jVersion = '1.7.31'
    sharedManifest = manifest {
        attributes(
                ['Neo4j-Arrow-Version': project.version,
                 'Neo4j-Arrow-Commit': grgit.head().abbreviatedId]
        )
    } as DefaultManifest
}

dependencies {
    implementation (
            [group: 'org.slf4j', name: 'slf4j-api', version: project.ext.sl4jVersion],
            project.ext.arrowFlightGrpc,
            // project.ext.arrowCompression
    )
    testImplementation (
            [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: project.ext.jupiterVersion],
            [group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: rootProject.ext.neo4j.driverVersion],
            project(':client')
    )
    testRuntimeOnly (
            [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: project.ext.jupiterVersion],
            [group: 'org.slf4j', name: 'slf4j-simple', version: project.ext.sl4jVersion],
    )
}

test {
    useJUnitPlatform()
    filter {
        includeTestsMatching "org.neo4j.arrow.*"
    }
    jvmArgs '-XX:MaxDirectMemorySize=8g'

}

project(':common') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    sourceCompatibility = 11
    targetCompatibility = 11

    group = 'org.neo4j.arrow'
    version = parent.version

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
        filter {
            includeTestsMatching "org.neo4j.arrow.*"
        }
        jvmArgs '-XX:MaxDirectMemorySize=8g'
    }

    dependencies {
        implementation (
                rootProject,
                rootProject.ext.arrowFlightGrpc,
                [group: 'org.neo4j', name: 'neo4j-parser', version: rootProject.ext.neo4j.serverVersion],
        )
        testImplementation (
                [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: rootProject.ext.jupiterVersion],
        )
        testRuntimeOnly (
                [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: rootProject.ext.jupiterVersion],
                [group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion],
        )
    }
}

project(':client') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'application'
    sourceCompatibility = 11
    targetCompatibility = 11

    group = 'org.neo4j.arrow'
    version = parent.version

    application {
        mainClass.set("org.neo4j.arrow.demo.Client")
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation (
                rootProject,
                rootProject.ext.arrowFlightGrpc,
                project(':common'),
                project(':plugin')
        )
        runtimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion
    }
}

project(':server') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'application'

    sourceCompatibility = 11
    targetCompatibility = 11

    group = 'org.neo4j.arrow'
    version = parent.version

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation (
                rootProject,
                rootProject.ext.arrowFlightGrpc,
                project(':common'),
                [group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: rootProject.ext.neo4j.driverVersion],
        )
        runtimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion
        testImplementation (
                [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: rootProject.ext.jupiterVersion],
        )
        testRuntimeOnly (
                [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: rootProject.ext.jupiterVersion],
                [group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion],
        )
    }

    application {
        mainClass.set("org.neo4j.arrow.demo.Neo4jProxyServer")
    }
}

project(':strawman') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'application'

    sourceCompatibility = 11
    targetCompatibility = 11

    group 'org.neo4j.arrow'
    version = parent.version

    application {
        mainClass.set("org.neo4j.arrow.Neo4jDirectClient")
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation (
                rootProject,
                [group: 'org.neo4j.driver', name: 'neo4j-java-driver', version: rootProject.ext.neo4j.driverVersion],
                [group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion]
        )
    }
}

project(':plugin') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'

    sourceCompatibility = 11
    targetCompatibility = 11

    group = 'org.neo4j.arrow'
    version = parent.version

    test {
        useJUnitPlatform()
        filter {
            includeTestsMatching "org.neo4j.arrow.*"
        }
        jvmArgs '-XX:MaxDirectMemorySize=8g'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation (
                rootProject,
                project(':common'),
                [group: 'org.slf4j', name: 'slf4j-api', version: rootProject.ext.sl4jVersion],
                [group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion],
                [group: 'org.roaringbitmap', name: 'RoaringBitmap', version: '0.9.23'],
        )
        compileOnly (
                [group: 'org.neo4j', name: 'neo4j-configuration', version: rootProject.ext.neo4j.serverVersion],
                [group: 'org.neo4j', name: 'neo4j-kernel', version: rootProject.ext.neo4j.serverVersion],
                [group: 'org.neo4j', name: 'neo4j-security', version: rootProject.ext.neo4j.serverVersion],
                [group: 'org.neo4j', name: 'neo4j-record-storage-engine', version: rootProject.ext.neo4j.serverVersion],
                [group: 'org.neo4j.gds', name: 'core', version: rootProject.ext.neo4j.gdsVersion],
                [group: 'org.neo4j.gds', name: 'config-api', version: rootProject.ext.neo4j.gdsVersion],
                [group: 'org.neo4j.gds', name: 'graph-schema-api', version: rootProject.ext.neo4j.gdsVersion],
                [group: 'org.neo4j.gds', name: 'neo4j-adapter', version: rootProject.ext.neo4j.gdsVersion],
                [group: 'org.neo4j.gds', name: 'memory-usage', version: rootProject.ext.neo4j.gdsVersion],
                [group: 'org.neo4j.gds', name: 'proc-catalog', version: rootProject.ext.neo4j.gdsVersion],
                rootProject.ext.arrowFlightGrpc,
        )
        testImplementation (
                [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: rootProject.ext.jupiterVersion],
                [group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: rootProject.ext.jupiterVersion],
                [group: 'org.neo4j', name: 'neo4j-kernel', version: rootProject.ext.neo4j.serverVersion],
                [group: 'org.neo4j', name: 'neo4j-logging', version: rootProject.ext.neo4j.serverVersion],
                [group: 'org.neo4j.gds', name: 'graph-projection-api', version: rootProject.ext.neo4j.gdsVersion],
                project(':client'),
                rootProject.ext.arrowFlightGrpc
        )
        testRuntimeOnly (
                [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: rootProject.ext.jupiterVersion],
                [group: 'org.slf4j', name: 'slf4j-simple', version: rootProject.ext.sl4jVersion],
                [group: 'org.neo4j.gds', name: 'memory-usage', version: rootProject.ext.neo4j.gdsVersion],
                [group: 'org.neo4j.gds', name: 'neo4j-adapter', version: rootProject.ext.neo4j.gdsVersion],
        )
    }

    shadowJar {
        // APOC's use of Jackson breaks Apache Arrow at the moment
        relocate 'com.fasterxml.jackson', 'com.fasterxml.jackson.shaded'
        relocate 'io.netty', 'io.netty.shaded'
        dependencies {
            // Neo4j adds this for us
            exclude(dependency('org.neo4j:neo4j-parser'))
            exclude(dependency('org.opencypher::'))
        }
        manifest { inheritFrom rootProject.ext.sharedManifest }
    }

    test {
        useJUnitPlatform()
        filter {
            includeTestsMatching "org.neo4j.arrow.*"
        }
        jvmArgs '-Xmx4g'
    }
}
